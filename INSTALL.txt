Copyright (c) 2002 Infrae. All rights reserved.
See also LICENSE.txt

Meta::

  Valid for:  Silva 0.8.6
  Author:     Martijn Faassen
  Email:      faassen@infrae.com
  CVS:        $Revision: 1.22 $

Installing Silva

  NOTE: If you are upgrading to Silva 0.8.5 from Silva 0.8.4 or
  earlier, please consult
  "UPGRADE.txt":http://www.zope.org/Members/faassen/Silva/UPGRADE.txt
  instead for instructions.

  IMPORTANT: If you have problems installing Silva and your zope start
  fails somewhere due to ParsedXML (PrettyPrint module for instance),
  check whether you have PyXML installed. ParsedXML depends on PyXML
  for operations.

  Silva depends on a set of file-system Python products for Zope for
  its core functionality, as well as a set of services which are
  stored in the Zope Object Database for the particular look & feel of
  the system.

  These Silva products come as .tgz files, and need to be unpacked in
  the Zope's lib/python/Products directory. Restart Zope after
  unpacking to finish the installation.

  Silva Filesystem Products

    Silva (0.8.5)

      Silva implements the behavior for the Silva objects, such as
      Folders, Publications, and Documents. Also implements some basic
      functionality for the editing of Silva documents.
  
      The Silva product can be found here:

        "Silva":http://www.zope.org/Members/faassen/Silva

      or just download:

        "Silva-0.8.5.tgz":http://www.zope.org/Members/faassen/Silva/Silva-0.8.5.tgz
  
    XMLWidgets (0.8.3)

      A system that builds on top of ParsedXML to assist in the
      rendering of editor, as well as in the generation of the HTML
      for the public pages.

      XMLWidgets can be found here:

        "XMLWidgets":http://www.zope.org/Members/faassen/XMLWidgets

      or just download:

        "XMLWidgets-0.8.3.tgz":http://www.zope.org/Members/faassen/XMLWidgets/XMLWidgets-0.8.2.tgz

    ParsedXML (1.3.0)

      A system that allows the storage of XML documents in the Zope
      Object Database. Allows DOM access as well as ways to construct
      references to individual nodes. Silva Document and Silva Course
      use this to store their data.

      ParsedXML depends on the PyXML library for some of its
      operation; the Python interpreter that is used to run Zope must
      have access to a recent version of PyXML (0.7 should work. We
      have heard some reports about later versions not working
      correctly, and are still investigating this).

      ParsedXML can be found here:
 
        "ParsedXML":http://www.zope.org/Members/faassen/ParsedXML

      or just download:

        "ParsedXML-1.3.0.tgz":http://www.zope.org/Members/faassen/ParsedXML/ParsedXML-1.3.0.tgz
   
    Formulator (1.3.0)

      A system for the construction and validation of web forms, used
      by Silva's views. XXX currently CVS version, not yet released.

      Formulator can be found here:

        "Formulator":http://www.zope.org/Members/faassen/Formulator

      or just download:

        "Formulator-1.3.0.tgz":http://www.zope.org/Members/faassen/Formulator/Formulator-1.3.0.tgz

    FileSystemSite (1.1)

      A system for keeping PageTemplates, PythonScripts and so on on
      the filesystem. This allows us to maintain the view code for
      Silva on the filesystem, which should make both version control
      and deployment easier.

      FileSystemSite can be found here:

        "FileSystemSite":http://www.zope.org/Members/k_vertigo/Products/FileSystemSite

      or just download:
  
        "FileSystemSite-1.1.tgz":http://www.zope.org/Members/k_vertigo/Products/FileSystemSite/FileSystemSite-1.1.tgz

    Groups (0.2)

      If you want to take advantage of Groups support, please download and
      install the Groups product, here:
  
       "Groups-0.2.tgz":http://www.zope.org/Members/faassen/Groups/Groups-0.2.tgz

      Groups support is optional; Silva should run without the Groups
      product installed. Groups use a rather hackish technique called
      'monkey patching' to hook groups support into the Silva core, and
      this may conflict with other products that do the same. If you get
      strange behavior, removing the Groups product and restarting Zope
      will safely remove it.


    ExtFile (1.1.3)

      If you plan to manage large upload files with Silva, which
      should not me stroed in the ZODB but the plain file system, you
      may consider installing the ExtFile product from here:

       "ExtFile":http://www.zope.org/Members/MacGregor/ExtFile/ExtFile-1.1.3.tgz

      This product is optional; see "Installing Silva with ExtFile" below.
      You may want to look into the README.txt of ExtFile at
      installation time, and possibly adapt the undo handling. (This
      should not be changed afterwards.)


  Silva services (ZODB)

    service_view_registry

      Page templates and python scripts to determine the look & feel
      of the Silva objects, both in edit mode and also for their
      public/preview mode. This uses the Silva product.

    service_widgets and editor/viewer/previewer services

      These objects define the actual editors and (prev)viewers of
      Silva Documents and Silva Courses. This uses the XMLWidgets
      product.

    These services are contained in a Silva Root object; this will
    also contain the Silva content when it is added by the
    authors. The Silva root object also defines various properties and
    security settings needed by Silva, and some demo objects.

    Silva is packaged as a .zexp file, which can be imported into Zope
    after installing the filesystem products previously listed.

    You can find it here:

      "Silva":http://www.zope.org/Members/faassen/Silva

    or just download:

      "silva-0.8.5.zexp.gz":http://www.zope.org/Members/faassen/Silva/silva-0.8.5.zexp.gz

    First unpack 'silva-0.8.5.zexp.gz' to get a 'silva-0.8.5.zexp'
    file. Then place this in your Zope's 'import' directory, and then
    import it through the Zope management interface into your Zope's
    root. This can be done by using the 'import/export' button on the
    Zope's management screen. Silva currently expects to be installed
    directly under the Zope root and is named 'silva', but it should
    be possible to change this by altering some properties in the
    Silva root.

    To start using the Groups definitions, a "Groups Service" is needed.
    Once the Groups Filesystem Product is installed, such a service can be
    added to the Silva Root via the ZMI. This service should have
    'service_groups' for its id.

  Installing Silva with LDAP support

    Silva can work together with LDAPUserFolder so that users in an
    LDAP database can be looked up and authorized as Silva authors and
    editors. In order to do enable this, add and configure a
    LDAPUserFolder in your Silva root (as acl_users). Then go to the
    file UserManagement.py in the lib/python/Products/Silva directory,
    and change UserManagement.py to contain the line::

      from LDAPUserManagement import user_management

    and comment out this line::

      from SimpleUserManagement import user_management

    and then restarting Zope to make these changes take effect.

 
  Installing Silva with ExtFile support.

    If the ExtFile product is properly installed, Silva can use it
    to store Silva File objects in the file system instead of the ZODB.
    To let Silva use the ExtFile product, You may edit the file
    config.py in the lib/python/Products/Silva directory by changing::

      FILESYSTEM_STORAGE_ENABLED = 0

    to::

      FILESYSTEM_STORAGE_ENABLED = 1

    You may want to adjust the 'FILESYSTEM_PATH' as well.

    Note that enabling/disabling ExtFile storage does not change the
    storage of the already present Silve File objects. It has no effect
    toe the Silva Image objects either, as they are stored in the ZODB
    in any case. More intofomation is available in the 'docs/FileObject.stx'.

 



  Installing Silva on a ZEO cluster

    In this case, the products need to be installed for all nodes of
    the cluster. For LDAP support, the above change needs to be made
    in all installations of the Silva product. For importing the
    .zexp, put a copy of 'silva.zexp' in the 'import' directory of all
    cluster nodes.
 
    Since Silva depends heavily on sessions, these also need to be
    shared throughout the cluster; this can be done by mounting a
    non-undoable storage into the main storage that will be used
    specifically as a store for session data. For more information on
    this, see 'docs/ZeoClusterNotes.stx'.
